plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id 'com.github.johnrengelman.shadow' version '8.1.1'

}

group = 'me.crigas'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "placeholderapi"
        url = 'https://repo.extendedclip.com/releases/'
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "okaeri"
        url = "https://storehouse.okaeri.eu/repository/maven-releases/"
    }
    maven {
        name = "mirageRepositoryReleases"
        url = uri("https://repo.mirage-play.com/releases")
    }
    maven {
        name = "jitpack"
        url "https://jitpack.io"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.3-R0.1-SNAPSHOT")

    implementation "eu.okaeri:okaeri-configs-hjson:${project.okaeriConfigsVersion}"
    implementation "eu.okaeri:okaeri-configs-yaml-bukkit:${project.okaeriConfigsVersion}"
    implementation "eu.okaeri:okaeri-configs-serdes-commons:${project.okaeriConfigsVersion}"
    implementation "eu.okaeri:okaeri-configs-serdes-bukkit:${project.okaeriConfigsVersion}"

    compileOnly "org.projectlombok:lombok:${project.lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${project.lombokVersion}"

    compileOnly "me.playgamesgo:plugin-annotations-continued:${project.pluginAnnotationsVersion}"
    annotationProcessor "me.playgamesgo:plugin-annotations-continued:${project.pluginAnnotationsVersion}"


    compileOnly "me.clip:placeholderapi:${project.placeholderApiVersion}"

    implementation "dev.jorel:commandapi-bukkit-shade:${project.commandApiVersion}"
    compileOnly "dev.jorel:commandapi-annotations:${project.commandApiVersion}"
    annotationProcessor "dev.jorel:commandapi-annotations:${project.commandApiVersion}"
    compileOnly 'me.clip:placeholderapi:2.11.6'



}

tasks {
    runServer {
        minecraftVersion("1.21.3")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
